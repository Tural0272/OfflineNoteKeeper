Project Criteria
Technologies: HTML, CSS, JavaScript (or libraries/frameworks based on JS).
The application should be installable:
Explanation: The application should include a manifest file that defines metadata for the application, such as its name, icons, theme color, and start_url. This allows users to add the application to their device’s home screen.
Use of native device features:
Explanation: The application should use at least two native device features, such as access to the camera, microphone, geolocation, push notifications, etc.
Additional criterion: Students should be able to describe which native features were used and how they were implemented.
The application should work offline:
Explanation: The application should use Service Workers and Cache API to store resources and allow the app to function without an internet connection.
Additional criterion: The application should inform the user of the lack of a connection and offer offline functionality.
At least three views with a consistent flow:
Explanation: The application should have at least three different view layouts that are logically connected and offer a consistent user experience.
Additional criterion: Each view should have a clearly defined purpose and functionality, and transitions between views should be intuitive.
The application hosted on a server:
Explanation: The application should be available online and run over a secure HTTPS connection.
Responsiveness:
Explanation: The application should be responsive, meaning it adjusts to different screen sizes.
Performance:
Explanation: The application should load quickly and run smoothly. Tools like Lighthouse can be used to assess the app's performance.
Caching strategy:
Explanation: The caching strategy used in the Service Worker should be appropriately chosen for different types of resources.
Project and code documentation:
Explanation: The source code should be well-commented, and the project’s README on GitHub should include instructions for running the project, its features, and functionality.
Code quality:
Explanation: The code should be readable, well-organized, and follow best practices.
 